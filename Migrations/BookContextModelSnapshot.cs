// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mass;

#nullable disable

namespace mass.Migrations
{
    [DbContext(typeof(BookContext))]
    partial class BookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("mass.Author", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("auid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("birth_year")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("death_year")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id", "auid");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("mass.Book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("bookshelves")
                        .HasColumnType("TEXT");

                    b.Property<bool>("copyright")
                        .HasColumnType("INTEGER");

                    b.Property<int>("download_count")
                        .HasColumnType("INTEGER");

                    b.Property<int>("formatsid")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("languages")
                        .HasColumnType("TEXT");

                    b.Property<string>("media_type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("subjects")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("summaries")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("formatsid");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("mass.Formats", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("applicationepubzip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("applicationoctetstream")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("applicationpdf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("applicationprstex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("applicationrdfxml")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("applicationxmobipocketebook")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("imagejpeg")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("texthtml")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("texthtmlcharsetutf8")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("textplaincharsetiso88591")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("textplaincharsetusascii")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("textplaincharsetutf8")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Formats");
                });

            modelBuilder.Entity("mass.Translator", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("trid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("birth_year")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("death_year")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id", "trid");

                    b.ToTable("Translators");
                });

            modelBuilder.Entity("mass.Author", b =>
                {
                    b.HasOne("mass.Book", null)
                        .WithMany("authors")
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("mass.Book", b =>
                {
                    b.HasOne("mass.Formats", "formats")
                        .WithMany()
                        .HasForeignKey("formatsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("formats");
                });

            modelBuilder.Entity("mass.Translator", b =>
                {
                    b.HasOne("mass.Book", null)
                        .WithMany("translators")
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("mass.Book", b =>
                {
                    b.Navigation("authors");

                    b.Navigation("translators");
                });
#pragma warning restore 612, 618
        }
    }
}
